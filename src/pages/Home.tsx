import React, { useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Star, Car, Battery, Shield, Clock, CreditCard, CheckCircle, MapPin } from 'lucide-react';

const Home: React.FC = () => {
  const [isFlipped, setIsFlipped] = useState(false);

  // Auto flip every 3 seconds
  useEffect(() => {
    const interval = setInterval(() => {
      setIsFlipped(prev => !prev);
    }, 3000);

    return () => clearInterval(interval);
  }, []);

  const benefits = [
    {
      icon: Car,
      title: 'ƒê∆°n gi·∫£n',
      description: 'ƒê·∫∑t xe d·ªÖ d√†ng ch·ªâ v·ªõi v√†i thao t√°c'
    },
    {
      icon: Battery,
      title: 'Th√¢n thi·ªán',
      description: 'Xe ƒëi·ªán s·∫°ch, kh√¥ng kh√≠ th·∫£i'
    },
    {
      icon: Shield,
      title: 'An to√†n',
      description: 'B·∫£o hi·ªÉm to√†n di·ªán, an t√¢m l√°i xe'
    },
    {
      icon: Clock,
      title: 'Linh ho·∫°t',
      description: 'Thu√™ theo gi·ªù, ng√†y ho·∫∑c tu·∫ßn'
    }
  ];

  const steps = [
    {
      icon: MapPin,
      title: 'T√¨m xe',
      description: 'Ch·ªçn xe ƒëi·ªán ph√π h·ª£p v·ªõi nhu c·∫ßu c·ªßa b·∫°n'
    },
    {
      icon: CreditCard,
      title: 'Thanh to√°n',
      description: 'ƒê·∫∑t xe v√† thanh to√°n tr·ª±c tuy·∫øn'
    },
    {
      icon: CheckCircle,
      title: 'L√°i xe',
      description: 'Nh·∫≠n xe v√† b·∫Øt ƒë·∫ßu h√†nh tr√¨nh'
    }
  ];

  const testimonials = [
    {
      name: 'Nguy·ªÖn Minh Anh',
      avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b593?w=150&h=150&fit=crop&crop=face',
      rating: 5,
      text: 'D·ªãch v·ª• tuy·ªát v·ªùi! Xe ƒëi·ªán r·∫•t s·∫°ch v√† ti·∫øt ki·ªám. T√¥i s·∫Ω ti·∫øp t·ª•c s·ª≠ d·ª•ng.'
    },
    {
      name: 'Tr·∫ßn VƒÉn ƒê·ª©c',
      avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',
      rating: 5,
      text: '·ª®ng d·ª•ng d·ªÖ s·ª≠ d·ª•ng, xe lu√¥n c√≥ s·∫µn khi c·∫ßn. R·∫•t h√†i l√≤ng v·ªõi ch·∫•t l∆∞·ª£ng d·ªãch v·ª•.'
    },
    {
      name: 'L√™ Th·ªã Hoa',
      avatar: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=150&h=150&fit=crop&crop=face',
      rating: 5,
      text: 'Thu√™ xe ƒëi·ªán gi√∫p t√¥i ti·∫øt ki·ªám r·∫•t nhi·ªÅu chi ph√≠. Xe ch·∫°y √™m v√† kh√¥ng ti·∫øng ·ªìn.'
    }
  ];

  const stats = [
    { label: 'Kh√°ch h√†ng h√†i l√≤ng', value: '10,000+' },
    { label: 'Xe ƒëi·ªán c√≥ s·∫µn', value: '500+' },
    { label: 'Th√†nh ph·ªë ph·ª•c v·ª•', value: '25+' },
    { label: 'Km ƒë√£ v·∫≠n chuy·ªÉn', value: '1M+' }
  ];

  return (
    <div className="min-h-screen">
      {/* Hero Section */}
      <section className="relative bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 dark:from-gray-900 dark:via-blue-900 dark:to-indigo-900 pt-20 pb-32">
        <div className="container mx-auto px-4">
          <div className="grid lg:grid-cols-2 gap-12 items-center">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              className="space-y-8"
            >
              <div className="space-y-4">
                <Badge variant="secondary" className="bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-100">
                  üå± Th√¢n thi·ªán v·ªõi m√¥i tr∆∞·ªùng
                </Badge>
                <h1 className="text-5xl lg:text-6xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent leading-tight">
                  Thu√™ xe ƒëi·ªán
                  <br />
                  <span className="text-4xl lg:text-5xl">d·ªÖ d√†ng, nhanh ch√≥ng</span>
                </h1>
                <p className="text-xl text-gray-600 dark:text-gray-300 leading-relaxed">
                  Tr·∫£i nghi·ªám t∆∞∆°ng lai v·ªõi d·ªãch v·ª• cho thu√™ xe ƒëi·ªán hi·ªán ƒë·∫°i. 
                  Ti·∫øt ki·ªám chi ph√≠, b·∫£o v·ªá m√¥i tr∆∞·ªùng v√† di chuy·ªÉn th√¥ng minh.
                </p>
              </div>
              
              <div className="flex flex-col sm:flex-row gap-4">
                <Button size="lg" className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white px-8 py-6 text-lg">
                  Thu√™ xe ngay
                </Button>
                <Button variant="outline" size="lg" className="px-8 py-6 text-lg border-2">
                  T√¨m hi·ªÉu th√™m
                </Button>
              </div>

              {/* Stats */}
              <div className="grid grid-cols-2 lg:grid-cols-4 gap-4 pt-8">
                {stats.map((stat, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.8, delay: 0.2 + index * 0.1 }}
                    className="text-center"
                  >
                    <div className="text-2xl lg:text-3xl font-bold text-blue-600 dark:text-blue-400">
                      {stat.value}
                    </div>
                    <div className="text-sm text-gray-600 dark:text-gray-400">
                      {stat.label}
                    </div>
                  </motion.div>
                ))}
              </div>
            </motion.div>

            <motion.div
              initial={{ opacity: 0, scale: 0.8 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ duration: 0.8, delay: 0.2 }}
              className="relative"
            >
              <div className="relative z-10">
                {/* Flip Container */}
                <div 
                  className="relative w-full h-96 cursor-pointer"
                  style={{ perspective: '1000px' }}
                  onClick={() => setIsFlipped(!isFlipped)}
                >
                  <motion.div
                    className="absolute inset-0 w-full h-full"
                    style={{ transformStyle: 'preserve-3d' }}
                    animate={{ rotateY: isFlipped ? 180 : 0 }}
                    transition={{ duration: 0.8, ease: 'easeInOut' }}
                  >
                    {/* Front Side - VF e34 */}
                    <div
                      className="absolute inset-0 w-full h-full backface-hidden"
                      style={{ backfaceVisibility: 'hidden' }}
                    >
                      <img
                        src="/src/data/oto.jpg"
                        alt="VinFast VF e34 - Xe ƒëi·ªán hi·ªán ƒë·∫°i"
                        className="rounded-2xl shadow-2xl w-full h-full object-cover"
                      />
                      <div className="absolute bottom-4 left-4 bg-black/70 text-white px-3 py-2 rounded-lg">
                        <p className="text-sm font-semibold">VinFast VF e34</p>
                      </div>
                    </div>
                    
                    {/* Back Side - VF 8 */}
                    <div
                      className="absolute inset-0 w-full h-full backface-hidden"
                      style={{ 
                        backfaceVisibility: 'hidden',
                        transform: 'rotateY(180deg)'
                      }}
                    >
                      <img
                        src="https://images.unsplash.com/photo-1614200187524-dc4b892acf16?auto=format&fit=crop&w=800&q=80"
                        alt="VinFast VF 8 - Xe ƒëi·ªán cao c·∫•p"
                        className="rounded-2xl shadow-2xl w-full h-full object-cover"
                      />
                      <div className="absolute bottom-4 left-4 bg-black/70 text-white px-3 py-2 rounded-lg">
                        <p className="text-sm font-semibold">VinFast VF 8</p>
                      </div>
                    </div>
                  </motion.div>
                </div>
                
                {/* Click hint */}
                <div className="absolute top-4 right-4 bg-white/90 text-gray-700 px-3 py-2 rounded-lg text-sm">
                  üëÜ Click ƒë·ªÉ xem th√™m
                </div>
              </div>
              <div className="absolute -inset-4 bg-gradient-to-r from-blue-600 to-purple-600 rounded-2xl blur-2xl opacity-20"></div>
            </motion.div>
          </div>
        </div>
      </section>

      {/* Benefits Section */}
      <section className="py-20 bg-white dark:bg-gray-800">
        <div className="container mx-auto px-4">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            className="text-center space-y-4 mb-16"
          >
            <h2 className="text-4xl font-bold">T·∫°i sao ch·ªçn ch√∫ng t√¥i?</h2>
            <p className="text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto">
              Nh·ªØng l·ª£i √≠ch v∆∞·ª£t tr·ªôi khi s·ª≠ d·ª•ng d·ªãch v·ª• cho thu√™ xe ƒëi·ªán c·ªßa ch√∫ng t√¥i
            </p>
          </motion.div>

          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
            {benefits.map((benefit, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8, delay: index * 0.1 }}
              >
                <Card className="text-center h-full hover:shadow-lg transition-shadow duration-300">
                  <CardHeader>
                    <div className="mx-auto w-16 h-16 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center mb-4">
                      <benefit.icon className="w-8 h-8 text-white" />
                    </div>
                    <CardTitle className="text-xl">{benefit.title}</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <p className="text-gray-600 dark:text-gray-300">{benefit.description}</p>
                  </CardContent>
                </Card>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* How it works */}
      <section className="py-20 bg-gray-50 dark:bg-gray-900">
        <div className="container mx-auto px-4">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            className="text-center space-y-4 mb-16"
          >
            <h2 className="text-4xl font-bold">C√°ch th·ª©c ho·∫°t ƒë·ªông</h2>
            <p className="text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto">
              Ch·ªâ v·ªõi 3 b∆∞·ªõc ƒë∆°n gi·∫£n, b·∫°n ƒë√£ c√≥ th·ªÉ thu√™ xe ƒëi·ªán
            </p>
          </motion.div>

          <div className="grid md:grid-cols-3 gap-8">
            {steps.map((step, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8, delay: index * 0.2 }}
                className="relative"
              >
                <Card className="text-center h-full">
                  <CardHeader>
                    <div className="relative mx-auto w-16 h-16 bg-gradient-to-br from-green-500 to-blue-600 rounded-full flex items-center justify-center mb-4">
                      <step.icon className="w-8 h-8 text-white" />
                      <div className="absolute -top-2 -right-2 w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center text-white font-bold text-sm">
                        {index + 1}
                      </div>
                    </div>
                    <CardTitle className="text-xl">{step.title}</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <p className="text-gray-600 dark:text-gray-300">{step.description}</p>
                  </CardContent>
                </Card>
                
                {index < steps.length - 1 && (
                  <div className="hidden md:block absolute top-1/2 -right-4 w-8 h-0.5 bg-gradient-to-r from-blue-400 to-purple-400 transform -translate-y-1/2"></div>
                )}
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* Testimonials */}
      <section className="py-20 bg-white dark:bg-gray-800">
        <div className="container mx-auto px-4">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            className="text-center space-y-4 mb-16"
          >
            <h2 className="text-4xl font-bold">Kh√°ch h√†ng n√≥i g√¨ v·ªÅ ch√∫ng t√¥i</h2>
            <p className="text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto">
              H√†ng ng√†n kh√°ch h√†ng ƒë√£ tin t∆∞·ªüng v√† h√†i l√≤ng v·ªõi d·ªãch v·ª• c·ªßa ch√∫ng t√¥i
            </p>
          </motion.div>

          <div className="grid md:grid-cols-3 gap-8">
            {testimonials.map((testimonial, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8, delay: index * 0.1 }}
              >
                <Card className="h-full">
                  <CardHeader>
                    <div className="flex items-center space-x-4">
                      <img
                        src={testimonial.avatar}
                        alt={testimonial.name}
                        className="w-12 h-12 rounded-full object-cover"
                      />
                      <div>
                        <h4 className="font-semibold">{testimonial.name}</h4>
                        <div className="flex items-center space-x-1">
                          {[...Array(testimonial.rating)].map((_, i) => (
                            <Star key={i} className="w-4 h-4 fill-yellow-400 text-yellow-400" />
                          ))}
                        </div>
                      </div>
                    </div>
                  </CardHeader>
                  <CardContent>
                    <p className="text-gray-600 dark:text-gray-300 italic">"{testimonial.text}"</p>
                  </CardContent>
                </Card>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 bg-gradient-to-r from-blue-600 to-purple-600">
        <div className="container mx-auto px-4 text-center">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            className="space-y-8"
          >
            <h2 className="text-4xl font-bold text-white">
              S·∫µn s√†ng tr·∫£i nghi·ªám t∆∞∆°ng lai?
            </h2>
            <p className="text-xl text-blue-100 max-w-3xl mx-auto">
              Tham gia c√πng h√†ng ng√†n kh√°ch h√†ng ƒë√£ ch·ªçn xe ƒëi·ªán cho cu·ªôc s·ªëng xanh v√† b·ªÅn v·ªØng
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button size="lg" variant="secondary" className="px-8 py-6 text-lg">
                ƒêƒÉng k√Ω ngay
              </Button>
              <Button size="lg" variant="outline" className="px-8 py-6 text-lg border-white text-white hover:bg-white hover:text-blue-600">
                Li√™n h·ªá t∆∞ v·∫•n
              </Button>
            </div>
          </motion.div>
        </div>
      </section>
    </div>
  );
};

export default Home;
